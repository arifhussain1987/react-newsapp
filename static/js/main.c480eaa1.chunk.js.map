{"version":3,"sources":["App.js","reportWebVitals.js","components/Python.js","components/Javascript.js","index.js"],"names":["DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_HPP","PARAM_PAGE","url","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","console","log","App","state","lists","searchKey","searchItem","isLoading","removeItem","bind","searchValue","fetchTopStories","onSubmit","setTopStories","searchTerm","this","result","hits","page","oldhits","updatedHits","setState","fetch","then","response","json","catch","e","event","checkTopStoriesSearchTerm","preventDefault","id","updated_list","filter","itemid","objectID","target","value","className","ssr","onClick","Component","Search","type","onChange","Table","props","sortKey","isSortReverse","onSort","sechItem","sortedList","reverseSortedList","map","item","href","title","author","num_comments","points","Buttons","Sort","children","Loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Python","Javascript","Root","basename","to","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c480eaa1.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport list from \"./list\";\nimport {sortBy} from 'lodash';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nconst DEFAULT_QUERY = 'react';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n\nconst DEFAULT_HPP = 100\nconst PARAM_HPP = \"hitsPerPage=\"\n\nconst DEFAULT_PAGE = 0;\nconst PARAM_PAGE = 'page=';\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse(),\n}\n\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`\nconsole.log(url)\n\nfunction isSearched(searchTerm) {\n  return function (item) {\n    return !searchTerm || item.title.toLowerCase().includes(searchTerm);\n  };\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // list: null,\n      lists : null,\n      searchKey : '',\n      searchItem: DEFAULT_QUERY,\n      isLoading : false,\n      \n    };\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setTopStories = this.setTopStories.bind(this)\n    \n  }\n\n  \n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.lists[searchTerm];\n  }\n\n  setTopStories(result){\n    // get the hits and page from result\n    const {hits, page } = result;\n    // meaning page in not 0, button has been clicked, page might be 1 or 2\n    // old hits are already available in the state\n\n    const oldhits = this.state.lists && this.state.lists[this.state.searchKey] ? this.state.lists[this.state.searchKey].hits : [];\n\n    // const oldhits = page !== 0 ? this.state.list.hits : [];\n    const updatedHits = [...oldhits, ...hits];\n    // this.setState({list: {hits : updatedHits, page}})\n    this.setState({ lists : {...this.state.lists, [this.state.searchKey] : {hits: updatedHits, page} }, isLoading: false })\n  }\n\n  fetchTopStories(searchTerm, page){\n    this.setState({isLoading: true})\n    // fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`).then(response => response.json() ).then(result => this.setState({list : result})).catch(e => e)\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`).then(response => response.json() ).then(result => this.setTopStories(result)).catch(e => e)\n  }\n\n  componentDidMount()\n  {\n    this.setState({ searchKey : this.state.searchItem })\n    this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE)\n    \n  }\n  onSubmit(event){\n    this.setState({ searchKey : this.state.searchItem })\n    if(this.checkTopStoriesSearchTerm(this.state.searchItem)){\n      this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\n    }\n    \n    event.preventDefault();\n  }\n\n  removeItem(id) {\n    function isNotId(itemid) {\n      return itemid.objectID !== id;\n    }\n    const {hits, page} = this.state.lists[this.state.searchKey]\n\n    // create a new updated list\n    const updated_list = hits.filter(isNotId);\n    // assign the new updated list to the list using setstate method\n    this.setState({lists: {...this.state.lists, [this.state.searchKey] : {hits : updated_list, page} }});\n  } \n\n  searchValue(event) {\n    this.setState({ searchItem: event.target.value });\n  }\n  // higher order function\n  // a function which is defined outside the class and also it return a function\n\n  render() {\n    if(!this.state.lists){return null;}\n    // const page = (this.state.lists && this.state.lists.page) || 0;\n    const page = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].page) || 0;\n    const list = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].hits) || [];\n    \n    return (\n      <div className=\"App\">\n        <Search ssr={this.searchValue} onSubmit={ this.onSubmit } />\n        <Table\n          list={list}\n          removeItem={this.removeItem}\n          \n        />\n  \n\n      { this.state.isLoading? <Loading /> :\n        <button \n        onClick={() => this.fetchTopStories(this.state.searchItem, page+1)}>\n          Load More\n          </button>\n      }\n\n\n      </div>\n    );\n  }\n}\n\n\n// stateless function\n\nconst Search = ({ ssr, onSubmit }) => (\n  <div className=\"cls1\">\n    <form onSubmit={ onSubmit }>\n    <input type=\"text\" onChange={ssr} />\n    <button className=\"btn btn-success\" type=\"submit\">Search</button>\n  </form>\n  </div>\n  \n);\n\nclass Table extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false\n    }\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey){\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({sortKey, isSortReverse})\n  }\n  render(){\n    const { list, sechItem, removeItem} = this.props;\n    const {sortKey, isSortReverse} = this.state;\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse?sortedList.reverse(): sortedList;\n  \n  return (\n    \n    <div>\n      <div>\n        <Sort sortKey = {'TITLE'} onSort = {this.onSort}>Title </Sort>\n        <Sort sortKey = {'AUTHOR'} onSort = {this.onSort}> Author </Sort>\n        <Sort sortKey = {'COMMENTS'} onSort = {this.onSort}> Comments </Sort>\n        <Sort sortKey = {'POINTS'} onSort = {this.onSort}> Points </Sort>\n      </div>\n\n      {\n      // list.filter(isSearched(searchItem)).map((item) => (\n        // SORTS[sortKey](list).map(item=> \n        reverseSortedList.map(item=> \n        <div key={item.objectID}>\n          <h1>\n            <a href={item.url}> {item.title}</a> by {item.author}\n          </h1>\n          <h5>\n            {item.num_comments} comments | {item.points} points\n          </h5>\n          <Buttons  onClick={() => removeItem(item.objectID)} />\n          {/* <button type=\"button\" onClick={() => removeItem(item.object_id)}>\n            Remove Item\n          </button> */}\n        </div>\n      )}\n    </div>\n  );\n}}\n\nclass Buttons extends Component {\n  render() {\n    return (\n      <button className=\"btn btn-danger\" type=\"button\" onClick={this.props.onClick}>\n        Remove Item\n      </button>\n    );\n  }\n}\n\nconst Sort = ({ sortKey, onSort, children}) =>\n<button\nonClick={() => onSort(sortKey)}\n>{children}</button>\n\nconst Loading = () => <div>Loading...</div>\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Component } from \"react\";\r\nimport {sortBy} from 'lodash';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../index.css\";\r\n\r\nconst DEFAULT_QUERY = 'react';\r\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nconst PATH_SEARCH = '/search';\r\nconst PARAM_SEARCH = 'query=';\r\n\r\nconst DEFAULT_HPP = 100\r\nconst PARAM_HPP = \"hitsPerPage=\"\r\n\r\nconst DEFAULT_PAGE = 0;\r\nconst PARAM_PAGE = 'page=';\r\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n  POINTS: list => sortBy(list, 'points').reverse(),\r\n}\r\n\r\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`\r\nconsole.log(url)\r\n\r\nfunction isSearched(searchTerm) {\r\n  return function (item) {\r\n    return !searchTerm || item.title.toLowerCase().includes(searchTerm);\r\n  };\r\n}\r\n\r\nclass Python extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // list: null,\r\n      lists : null,\r\n      searchKey : '',\r\n      searchItem: \"python\",\r\n      isLoading : false,\r\n      \r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this)\r\n    \r\n  }\r\n\r\n  \r\n  checkTopStoriesSearchTerm(searchTerm){\r\n    return !this.state.lists[searchTerm];\r\n  }\r\n\r\n  setTopStories(result){\r\n    // get the hits and page from result\r\n    const {hits, page } = result;\r\n    // meaning page in not 0, button has been clicked, page might be 1 or 2\r\n    // old hits are already available in the state\r\n\r\n    const oldhits = this.state.lists && this.state.lists[this.state.searchKey] ? this.state.lists[this.state.searchKey].hits : [];\r\n\r\n    // const oldhits = page !== 0 ? this.state.list.hits : [];\r\n    const updatedHits = [...oldhits, ...hits];\r\n    // this.setState({list: {hits : updatedHits, page}})\r\n    this.setState({ lists : {...this.state.lists, [this.state.searchKey] : {hits: updatedHits, page} }, isLoading: false })\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page){\r\n    this.setState({isLoading: true})\r\n    // fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`).then(response => response.json() ).then(result => this.setState({list : result})).catch(e => e)\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`).then(response => response.json() ).then(result => this.setTopStories(result)).catch(e => e)\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.setState({ searchKey : this.state.searchItem })\r\n    this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE)\r\n    \r\n  }\r\n  onSubmit(event){\r\n    this.setState({ searchKey : this.state.searchItem })\r\n    if(this.checkTopStoriesSearchTerm(this.state.searchItem)){\r\n      this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\r\n    }\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    function isNotId(itemid) {\r\n      return itemid.objectID !== id;\r\n    }\r\n    const {hits, page} = this.state.lists[this.state.searchKey]\r\n\r\n    // create a new updated list\r\n    const updated_list = hits.filter(isNotId);\r\n    // assign the new updated list to the list using setstate method\r\n    this.setState({lists: {...this.state.lists, [this.state.searchKey] : {hits : updated_list, page} }});\r\n  } \r\n\r\n  searchValue(event) {\r\n    this.setState({ searchItem: event.target.value });\r\n  }\r\n  // higher order function\r\n  // a function which is defined outside the class and also it return a function\r\n\r\n  render() {\r\n    if(!this.state.lists){return null;}\r\n    // const page = (this.state.lists && this.state.lists.page) || 0;\r\n    const page = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].page) || 0;\r\n    const list = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].hits) || [];\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Search ssr={this.searchValue} onSubmit={ this.onSubmit } />\r\n        <Table\r\n          list={list}\r\n          removeItem={this.removeItem}\r\n          \r\n        />\r\n  \r\n\r\n      { this.state.isLoading? <Loading /> :\r\n        <button \r\n        onClick={() => this.fetchTopStories(this.state.searchItem, page+1)}>\r\n          Load More\r\n          </button>\r\n      }\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// stateless function\r\n\r\nconst Search = ({ ssr, onSubmit }) => (\r\n  <div className=\"cls1\">\r\n    <form onSubmit={ onSubmit }>\r\n    <input type=\"text\" onChange={ssr} />\r\n    <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n  </form>\r\n  </div>\r\n  \r\n);\r\n\r\nclass Table extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortKey: 'NONE',\r\n      isSortReverse: false\r\n    }\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey){\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({sortKey, isSortReverse})\r\n  }\r\n  render(){\r\n    const { list, sechItem, removeItem} = this.props;\r\n    const {sortKey, isSortReverse} = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse?sortedList.reverse(): sortedList;\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <div>\r\n        <Sort sortKey = {'TITLE'} onSort = {this.onSort}>Title </Sort>\r\n        <Sort sortKey = {'AUTHOR'} onSort = {this.onSort}> Author </Sort>\r\n        <Sort sortKey = {'COMMENTS'} onSort = {this.onSort}> Comments </Sort>\r\n        <Sort sortKey = {'POINTS'} onSort = {this.onSort}> Points </Sort>\r\n      </div>\r\n\r\n      {\r\n      // list.filter(isSearched(searchItem)).map((item) => (\r\n        // SORTS[sortKey](list).map(item=> \r\n        reverseSortedList.map(item=> \r\n        <div key={item.objectID}>\r\n          <h1>\r\n            <a href={item.url}> {item.title}</a> by {item.author}\r\n          </h1>\r\n          <h5>\r\n            {item.num_comments} comments | {item.points} points\r\n          </h5>\r\n          <Buttons  onClick={() => removeItem(item.objectID)} />\r\n          {/* <button type=\"button\" onClick={() => removeItem(item.object_id)}>\r\n            Remove Item\r\n          </button> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}}\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"btn btn-danger\" type=\"button\" onClick={this.props.onClick}>\r\n        Remove Item\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nconst Sort = ({ sortKey, onSort, children}) =>\r\n<button\r\nonClick={() => onSort(sortKey)}\r\n>{children}</button>\r\n\r\nconst Loading = () => <div>Loading...</div>\r\n\r\nexport default Python;","import { Component } from \"react\";\r\nimport {sortBy} from 'lodash';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../index.css\";\r\n\r\nconst DEFAULT_QUERY = 'react';\r\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nconst PATH_SEARCH = '/search';\r\nconst PARAM_SEARCH = 'query=';\r\n\r\nconst DEFAULT_HPP = 100\r\nconst PARAM_HPP = \"hitsPerPage=\"\r\n\r\nconst DEFAULT_PAGE = 0;\r\nconst PARAM_PAGE = 'page=';\r\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n  POINTS: list => sortBy(list, 'points').reverse(),\r\n}\r\n\r\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`\r\nconsole.log(url)\r\n\r\nfunction isSearched(searchTerm) {\r\n  return function (item) {\r\n    return !searchTerm || item.title.toLowerCase().includes(searchTerm);\r\n  };\r\n}\r\n\r\nclass Javascript extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // list: null,\r\n      lists : null,\r\n      searchKey : '',\r\n      searchItem: 'javascript',\r\n      isLoading : false,\r\n      \r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this)\r\n    \r\n  }\r\n\r\n  \r\n  checkTopStoriesSearchTerm(searchTerm){\r\n    return !this.state.lists[searchTerm];\r\n  }\r\n\r\n  setTopStories(result){\r\n    // get the hits and page from result\r\n    const {hits, page } = result;\r\n    // meaning page in not 0, button has been clicked, page might be 1 or 2\r\n    // old hits are already available in the state\r\n\r\n    const oldhits = this.state.lists && this.state.lists[this.state.searchKey] ? this.state.lists[this.state.searchKey].hits : [];\r\n\r\n    // const oldhits = page !== 0 ? this.state.list.hits : [];\r\n    const updatedHits = [...oldhits, ...hits];\r\n    // this.setState({list: {hits : updatedHits, page}})\r\n    this.setState({ lists : {...this.state.lists, [this.state.searchKey] : {hits: updatedHits, page} }, isLoading: false })\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page){\r\n    this.setState({isLoading: true})\r\n    // fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`).then(response => response.json() ).then(result => this.setState({list : result})).catch(e => e)\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`).then(response => response.json() ).then(result => this.setTopStories(result)).catch(e => e)\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.setState({ searchKey : this.state.searchItem })\r\n    this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE)\r\n    \r\n  }\r\n  onSubmit(event){\r\n    this.setState({ searchKey : this.state.searchItem })\r\n    if(this.checkTopStoriesSearchTerm(this.state.searchItem)){\r\n      this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\r\n    }\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    function isNotId(itemid) {\r\n      return itemid.objectID !== id;\r\n    }\r\n    const {hits, page} = this.state.lists[this.state.searchKey]\r\n\r\n    // create a new updated list\r\n    const updated_list = hits.filter(isNotId);\r\n    // assign the new updated list to the list using setstate method\r\n    this.setState({lists: {...this.state.lists, [this.state.searchKey] : {hits : updated_list, page} }});\r\n  } \r\n\r\n  searchValue(event) {\r\n    this.setState({ searchItem: event.target.value });\r\n  }\r\n  // higher order function\r\n  // a function which is defined outside the class and also it return a function\r\n\r\n  render() {\r\n    if(!this.state.lists){return null;}\r\n    // const page = (this.state.lists && this.state.lists.page) || 0;\r\n    const page = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].page) || 0;\r\n    const list = (this.state.lists && this.state.lists[this.state.searchKey] && this.state.lists[this.state.searchKey].hits) || [];\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Search ssr={this.searchValue} onSubmit={ this.onSubmit } />\r\n        <Table\r\n          list={list}\r\n          removeItem={this.removeItem}\r\n          \r\n        />\r\n  \r\n\r\n      { this.state.isLoading? <Loading /> :\r\n        <button \r\n        onClick={() => this.fetchTopStories(this.state.searchItem, page+1)}>\r\n          Load More\r\n          </button>\r\n      }\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// stateless function\r\n\r\nconst Search = ({ ssr, onSubmit }) => (\r\n  <div className=\"cls1\">\r\n    <form onSubmit={ onSubmit }>\r\n    <input type=\"text\" onChange={ssr} />\r\n    <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n  </form>\r\n  </div>\r\n  \r\n);\r\n\r\nclass Table extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortKey: 'NONE',\r\n      isSortReverse: false\r\n    }\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey){\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({sortKey, isSortReverse})\r\n  }\r\n  render(){\r\n    const { list, sechItem, removeItem} = this.props;\r\n    const {sortKey, isSortReverse} = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse?sortedList.reverse(): sortedList;\r\n  \r\n  return (\r\n    \r\n    <div>\r\n      <div>\r\n        <Sort sortKey = {'TITLE'} onSort = {this.onSort}>Title </Sort>\r\n        <Sort sortKey = {'AUTHOR'} onSort = {this.onSort}> Author </Sort>\r\n        <Sort sortKey = {'COMMENTS'} onSort = {this.onSort}> Comments </Sort>\r\n        <Sort sortKey = {'POINTS'} onSort = {this.onSort}> Points </Sort>\r\n      </div>\r\n\r\n      {\r\n      // list.filter(isSearched(searchItem)).map((item) => (\r\n        // SORTS[sortKey](list).map(item=> \r\n        reverseSortedList.map(item=> \r\n        <div key={item.objectID}>\r\n          <h1>\r\n            <a href={item.url}> {item.title}</a> by {item.author}\r\n          </h1>\r\n          <h5>\r\n            {item.num_comments} comments | {item.points} points\r\n          </h5>\r\n          <Buttons  onClick={() => removeItem(item.objectID)} />\r\n          {/* <button type=\"button\" onClick={() => removeItem(item.object_id)}>\r\n            Remove Item\r\n          </button> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}}\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"btn btn-danger\" type=\"button\" onClick={this.props.onClick}>\r\n        Remove Item\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nconst Sort = ({ sortKey, onSort, children}) =>\r\n<button\r\nonClick={() => onSort(sortKey)}\r\n>{children}</button>\r\n\r\nconst Loading = () => <div>Loading...</div>\r\n\r\nexport default Javascript;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Routes, Link, NavLink} from 'react-router-dom'\nimport Python from \"./components/Python\"\nimport Javascript from \"./components/Javascript\"\n\nconst Root = () => \n<BrowserRouter basename=\"/arifhussain1987/\">\n<div>\n  <Link to=\"/\">Home</Link>\n  <Link to=\"/python\">python</Link>\n  <Link to=\"/javascript\">javascript</Link>\n\n    <Routes>\n      <Route exact path=\"/\" element={<App />} />\n      <Route exact path=\"/python\" element={<Python /> } />\n      <Route exact path=\"/javascript\" element={<Javascript /> } />\n    </Routes>\n \n</div>\n</BrowserRouter>\n\n\nconst About = () => \n<div>\n  <h1>This is About page...</h1>\n</div>\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}